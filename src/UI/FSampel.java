/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import com.sun.corba.se.impl.io.IIOPOutputStream;
import com.sun.corba.se.impl.io.OutputStreamHook;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.nio.file.Path;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.embed.swing.SwingFXUtils;
import javafx.stage.FileChooser;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import kelas.DBConfig;
import kelas.GLCMFeatureExtraction;
import kelas.simpan;

/**
 *
 * @author BURHAN NASIR RAUF
 */
public class FSampel extends javax.swing.JFrame {
    private FileChooser fileChooser;
    private File file;
    private String gambar;
    private Double contrast0, contrast45, contrast90, contrast135, mean_contrast;
    private Double dissimilarity0, dissimilarity45, dissimilarity90, dissimilarity135, mean_dissimilarity;
    private Double entropy0, entropy45, entropy90, entropy135, mean_entropy;
    private Double energy0, energy45, energy90, energy135, mean_energy;
    private Double homogenity0, homogenity45, homogenity90, homogenity135, mean_homogenity;
    private Path copy,files;
    private Image image;
    private byte[] foto;
    Dimension dimensi;
    BufferedImage img;
    private DefaultTableModel model;
    String OPSI;
    String s8;
    FileInputStream fileInputStream;

    /**
     * Creates new form FSampel
     */
    public FSampel() {
        this.fileInputStream = null;
        initComponents();
        tanggal();
        try {
            tampil();
        } catch (SQLException ex) {
            Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        fileChooser = new FileChooser();
        fileChooser.getExtensionFilters().addAll(
        new FileChooser.ExtensionFilter("Image Files", "*.png","*.jpg","*jpeg","*.bmp")
    );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void tanggal(){
        Date tgl = new Date();
        SimpleDateFormat df = new SimpleDateFormat("d MMMM yyyy");
        txt_tanggal.setText(df.format(tgl));
    }
    
    private DefaultTableModel tampil() throws SQLException {
        Object header[] ={"Kode", "Grade", "Contrast", "Homogeneity", "Entropy", "Energy", "Dissimilarity"};
        DefaultTableModel tabel = new DefaultTableModel(null, header);
        String sql = "SELECT * FROM sampel order by kd_sampel desc";
        Connection conn = DBConfig.getKoneksi();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        while (rs.next()) {
            String a = rs.getString("kd_sampel");
            String b = rs.getString("grade");
            String c = rs.getString("contrast");
            String d = rs.getString("homogeneity");
            String e = rs.getString("entropy");
            String f = rs.getString("energy");
            String g = rs.getString("dissimilarity");
            Blob blob = rs.getBlob("foto");
            byte[] data = blob.getBytes(1, (int) blob.length());
            String h = new String(data);
            String kolom[] = {a, b, c, d, e, f, g};
            tabel.addRow(kolom);
            jTable1.setModel(tabel);
        }
        return tabel;
    }
    
    private DefaultTableModel tampilAlgo() throws SQLException {
        Object header[] ={"Fitur", "0째", "45째", "90째", "135째", "Mean"};
        DefaultTableModel tabel = new DefaultTableModel(null, header);
        String sql = "SELECT * FROM sementara order by id ASC";
        Connection conn = DBConfig.getKoneksi();
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(sql);
        while (rs.next()) {
            String a = rs.getString("fitur");
            String b = rs.getString("nil1");
            String c = rs.getString("nil2");
            String d = rs.getString("nil3");
            String e = rs.getString("nil4");
            String f = rs.getString("mean");
            String kolom[] = {a, b, c, d, e, f};
            tabel.addRow(kolom);
            jTable3.setModel(tabel);
        }
        return tabel;
    }

    private void mati(){
        panelGambar4.setImage(null);
        panelGambar5.setImage(null);
        txt_namafile.setText("");
        jTable1.setEnabled(false);
        txt_kode.setText("");
        CB_grade.setSelectedIndex(0);
        CB_grade.setEnabled(false);
        btn_simpan.setEnabled(false);
        btn_tambah.setEnabled(true);
        contrast0 = null;
        contrast135 = null;
        contrast45 = null;
        contrast90 = null;
        dissimilarity0 = null;
        dissimilarity135 = null;
        dissimilarity45 = null;
        btn_hapus.setEnabled(true);
        dissimilarity90 = null;
        energy0 = null;
        energy135 = null;
        energy45 = null;
        energy90 = null;
        entropy0 = null;
        entropy135 = null;
        entropy45 = null;
        entropy90 = null;
        homogenity0 = null;
        homogenity135 = null;
        homogenity45 = null;
        homogenity90 = null;
        mean_contrast = null;
        mean_dissimilarity = null;
        mean_energy = null;
        mean_homogenity = null;
        mean_entropy = null;
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_hapus = new javax.swing.JButton();
        btn_simpan = new javax.swing.JButton();
        btn_tambah = new javax.swing.JButton();
        txt_namafile = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panelGambar4 = new UI.PanelGambar();
        panelGambar5 = new UI.PanelGambar();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txt_tanggal = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        CB_grade = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        txt_kode = new javax.swing.JTextField();
        statusbar = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sampel Objek");
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1366, 768));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_hapus.setText("HAPUS");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });
        getContentPane().add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 370, 100, 30));

        btn_simpan.setText("SIMPAN");
        btn_simpan.setEnabled(false);
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_simpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 420, 100, 30));

        btn_tambah.setText("TAMBAH");
        btn_tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tambahActionPerformed(evt);
            }
        });
        getContentPane().add(btn_tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 370, 100, 30));

        txt_namafile.setEditable(false);
        getContentPane().add(txt_namafile, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 420, 760, 30));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gambar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(51, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Grayscale");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 19, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("RGB");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 19, -1, -1));

        panelGambar4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        panelGambar4.setPreferredSize(new java.awt.Dimension(350, 250));

        javax.swing.GroupLayout panelGambar4Layout = new javax.swing.GroupLayout(panelGambar4);
        panelGambar4.setLayout(panelGambar4Layout);
        panelGambar4Layout.setHorizontalGroup(
            panelGambar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );
        panelGambar4Layout.setVerticalGroup(
            panelGambar4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );

        jPanel1.add(panelGambar4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        panelGambar5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        panelGambar5.setPreferredSize(new java.awt.Dimension(350, 250));

        javax.swing.GroupLayout panelGambar5Layout = new javax.swing.GroupLayout(panelGambar5);
        panelGambar5.setLayout(panelGambar5Layout);
        panelGambar5Layout.setHorizontalGroup(
            panelGambar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );
        panelGambar5Layout.setVerticalGroup(
            panelGambar5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );

        jPanel1.add(panelGambar5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 760, 310));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Identitas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Grade :");
        jPanel8.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        txt_tanggal.setEditable(false);
        txt_tanggal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_tanggal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_tanggal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tanggalActionPerformed(evt);
            }
        });
        jPanel8.add(txt_tanggal, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 170, 30));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Tanggal :");
        jPanel8.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        CB_grade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih GRADE -", "Grade A", "Grade B", "Grade C", "Grade D" }));
        CB_grade.setEnabled(false);
        jPanel8.add(CB_grade, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 170, 35));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Kode Sampel :");
        jPanel8.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        txt_kode.setEditable(false);
        txt_kode.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txt_kode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_kode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_kodeActionPerformed(evt);
            }
        });
        jPanel8.add(txt_kode, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 170, 30));

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 80, 280, 260));

        statusbar.setBackground(new java.awt.Color(0, 138, 138));
        statusbar.setForeground(new java.awt.Color(0, 138, 138));
        statusbar.setPreferredSize(new java.awt.Dimension(1366, 29));
        statusbar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/minimize.jpg"))); // NOI18N
        jButton4.setAlignmentY(1.0F);
        jButton4.setMargin(new java.awt.Insets(2, 13, 2, 15));
        jButton4.setPreferredSize(new java.awt.Dimension(25, 25));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        statusbar.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1308, 2, -1, -1));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/close.png"))); // NOI18N
        jButton5.setAlignmentY(1.0F);
        jButton5.setMargin(new java.awt.Insets(2, 13, 2, 15));
        jButton5.setPreferredSize(new java.awt.Dimension(25, 25));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        statusbar.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1338, 2, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Halaman Sampel Objek");
        statusbar.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 280, 29));

        getContentPane().add(statusbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable3.setEnabled(false);
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable3);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 630, 290));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setEnabled(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 470, 710, 290));

        jButton3.setText("BATAL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 420, 100, 30));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/unnamed.jpg"))); // NOI18N
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));
        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, -1, -1));
        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 470, 630, 290));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int pilih = JOptionPane.showConfirmDialog(null, "Ingin mengulang data ?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (pilih == JOptionPane.YES_OPTION) {
            mati();
            tanggal();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_kodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_kodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_kodeActionPerformed

    private void txt_tanggalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_tanggalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tanggalActionPerformed

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
        if (btn_simpan.isEnabled()){
            String grade = "";
            if (CB_grade.getSelectedIndex()==0){
                JOptionPane.showMessageDialog(null, "Harap pilih grade sampel");
            } else {
                InputStream is = null;
           
                    if (CB_grade.getSelectedIndex()==1){
                        grade = "A";
                    } else
                        if (CB_grade.getSelectedIndex()==2){
                            grade = "B";
                        } else
                            if (CB_grade.getSelectedIndex()==3){
                                grade = "C";
                            } else
                                if (CB_grade.getSelectedIndex()==4){
                                    grade = "D";
                                }
                    if (OPSI.equals("TAMBAH")){
                        if (txt_namafile.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Pilih file gambar terlebih dahulu");
            } else {
                try {
                        Connection cn = DBConfig.getKoneksi();
                        PreparedStatement ps = (PreparedStatement) cn.prepareStatement("INSERT INTO sampel(kd_sampel, grade, foto, contrast, homogeneity, entropy, energy, dissimilarity) values ('"+txt_kode.getText()+"', ?, ?, ?, ?, ?, ?, ?)");
                        ps.setString(1, grade);
                        ps.setBlob(2, fileInputStream);
                        ps.setDouble(3, mean_contrast);
                        ps.setDouble(4, mean_homogenity);
                        ps.setDouble(5, mean_entropy);
                        ps.setDouble(6, mean_energy);
                        ps.setDouble(7, mean_dissimilarity);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Data berhasil ditambah");
                    } catch (SQLException ex) {
                        Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    tanggal();
                    mati();
                        }
                        
                    } else
                   
                    if (OPSI.equals("HAPUS")){
                        try {
                        String sql = "DELETE FROM sampel WHERE kd_sampel = '"+txt_kode.getText()+"'";
                        Connection cn = DBConfig.getKoneksi();
                        Statement st = cn.createStatement();
                        st.executeUpdate(sql);
                        JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                    } catch (SQLException ex) {
                        Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    tanggal();
                    mati();
                    }
               
                try {
                    tampil();
                } catch (SQLException ex) {
                    Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.setState(FSampel.ICONIFIED);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int pilih = JOptionPane.showConfirmDialog(null, "Ingin kembali ke halaman utama ?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (pilih == JOptionPane.YES_OPTION) {
            FUtamaAdmin n = new FUtamaAdmin();
            n.show();
            this.dispose();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btn_tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tambahActionPerformed
        if (btn_tambah.isEnabled()){
            OPSI = "TAMBAH";
            btn_hapus.setEnabled(false);
            btn_tambah.setEnabled(false);
            
            JFileChooser chooser = new JFileChooser(System.getProperty("user.home"));
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.setFileFilter(new FileNameExtensionFilter("jpg|png|bmp", "jpg","png","bmp"));

        if(chooser.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
            File file=chooser.getSelectedFile();
            String path = file.getAbsolutePath();
            s8 = path;
            try {
                fileInputStream = new FileInputStream(file);
                image = ImageIO.read(file);
                panelGambar4.setImage(image);
                dimensi = new Dimension();
                dimensi.width = image.getWidth(null)/4;
                dimensi.height = image.getHeight(null)/4;
                // panelGambar4.setPreferredSize(dimensi);
                // panelGambar5.setPreferredSize(dimensi);
                img = ImageIO.read(file);
                Graphics gg = img.getGraphics();
                gg.drawImage(img, 0, 0, null);
                for (int i = 0; i < img.getWidth(); i++) {
                    for (int j = 0; j < img.getHeight(); j++) {
                        int rgb = img.getRGB(i, j);
                        int newR = (rgb>>16)>>0xFF;
                        int newG = (rgb>>8)&0xFF;
                        int newB = (rgb>>0)&0xFF;
                        int newA = (rgb<<24)&0xFF;
                        int gr = (newR + newG + newB) / 3;
                        int gray = newA|gr<<16|gr<<8|gr;
                        img.setRGB(i, j, gray);
                    }
                }
                panelGambar5.setImage(img);
                
                if(!txt_namafile.getText().equals("")){
                    ObjectOutputStream objectOutputStream = null;
                    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
                    objectOutputStream = new ObjectOutputStream(outputStream);
                    ImageIcon icon = new ImageIcon(img);
                    objectOutputStream.writeObject(icon);
                    objectOutputStream.flush();
                    objectOutputStream.close();
                    this.setFoto(outputStream.toByteArray());
                }
            } catch (IOException ex) {
                Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
            }
            txt_namafile.setText(file.getAbsolutePath());
            try {
                GLCMFeatureExtraction glcmfe = new GLCMFeatureExtraction(new File(file.getPath()), 15);
                glcmfe.extract();

                contrast0 = glcmfe.getContrast0();
                homogenity0 = glcmfe.getHomogenity0();
                entropy0 = glcmfe.getEntropy0();
                energy0 = glcmfe.getEnergy0();
                dissimilarity0 = glcmfe.getDissimilarity0();

                contrast45 = glcmfe.getContrast45();
                homogenity45 = glcmfe.getHomogenity45();
                entropy45 = glcmfe.getEntropy45();
                energy45 = glcmfe.getEnergy45();
                dissimilarity45 = glcmfe.getDissimilarity45();

                contrast90 = glcmfe.getContrast90();
                homogenity90 = glcmfe.getHomogenity90();
                entropy90 = glcmfe.getEntropy90();
                energy90 = glcmfe.getEnergy90();
                dissimilarity90 = glcmfe.getDissimilarity90();

                contrast135 = glcmfe.getContrast135();
                homogenity135 = glcmfe.getHomogenity135();
                entropy135 = glcmfe.getEntropy135();
                energy135 = glcmfe.getEnergy135();
                dissimilarity135 = glcmfe.getDissimilarity135();
                
                mean_contrast = glcmfe.getContrast();
                mean_dissimilarity = glcmfe.getDissimilarity();
                mean_energy = glcmfe.getEnergy();
                mean_entropy = glcmfe.getEntropy();
                mean_homogenity = glcmfe.getHomogenity();
            } catch (IOException ex) {
                Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
               String sql = "TRUNCATE TABLE sementara";
               Connection cn = DBConfig.getKoneksi();
               Statement st = cn.createStatement();
               st.execute(sql);
            } catch (SQLException ex) {
               Logger.getLogger(FIdentifikasi.class.getName()).log(Level.SEVERE, null, ex);
            }
                
            
                try {
                    Connection cn = DBConfig.getKoneksi();
                    String sql = "INSERT INTO sementara(fitur, nil1, nil2, nil3, nil4, mean) VALUES"
                               + "('Contrast', "+ contrast0 +", "+ contrast45 +", "+ contrast90 +", "+ contrast135 +", "+mean_contrast+"),"
                               + "('Homogeneity', "+ homogenity0 +", "+ homogenity45 + ", "+homogenity90 +", "+homogenity135+", "+mean_homogenity+"),"
                               + "('Entropy', "+ entropy0 +", "+entropy45+", "+entropy90+", "+entropy135+", "+mean_entropy+"),"
                               + "('Energy', "+ energy0 +", "+energy45+", "+energy90+", "+energy135+", "+mean_energy+"),"
                               + "('Dissimilarity', "+ dissimilarity0 +", "+dissimilarity45+", "+dissimilarity90+", "+dissimilarity135+", "+mean_dissimilarity+")";
                    Statement st = cn.createStatement();
                    st.executeUpdate(sql);
                    tampilAlgo();
                } catch (SQLException ex) {
                    Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
                }
            if (txt_namafile.getText().isEmpty()){

            } else {
                kode();
                btn_simpan.setEnabled(true);
                CB_grade.setEnabled(true);
            }
        };       
        }
    }//GEN-LAST:event_btn_tambahActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.isEnabled()) {
            if (OPSI.equals("UBAH")){
                CB_grade.setEnabled(true);
            }
            try {
                int a = jTable1.getSelectedRow();
                txt_kode.setText(jTable1.getValueAt(a, 0).toString());
                String gg = jTable1.getValueAt(a, 1).toString();
                if (gg.equals("A")){
                    CB_grade.setSelectedIndex(1);
                } else
                if (gg.equals("B")){
                    CB_grade.setSelectedIndex(2);
                } else
                if (gg.equals("C")){
                    CB_grade.setSelectedIndex(3);
                } else
                if (gg.equals("D")){
                    CB_grade.setSelectedIndex(4);
                }
                
                String sql = "SELECT * FROM sampel WHERE kd_sampel ='"+ txt_kode.getText()+"'";
                Connection cn = DBConfig.getKoneksi();
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                if (rs.first()){
                    Blob blob = rs.getBlob("foto");
                    byte[] data = blob.getBytes(1, (int) blob.length());
                    Image gbr = ImageIO.read(new ByteArrayInputStream(data));
                    panelGambar4.setImage(gbr);
                }
            } catch (SQLException ex) {
                Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
        if (btn_hapus.isEnabled()){
            OPSI = "HAPUS";
            btn_hapus.setEnabled(false);
            btn_tambah.setEnabled(false);
            btn_simpan.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Silahkan pilih data pada tabel");
            jTable1.setEnabled(true);
        }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3MouseClicked

    private void setFoto(byte[] foto){
        this.foto = foto;
    }
    
    private byte[] getFoto(){
        return foto;
    }
    
    private void kode() {
        try {
            String sql = "SELECT * FROM sampel ORDER BY kd_sampel DESC";
            Connection cn = DBConfig.getKoneksi();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                int a = Integer.parseInt(rs.getString("kd_sampel").substring(1));
                int kode = a+1;
                txt_kode.setText("S"+kode);
            } else
            {
                txt_kode.setText("S1001");
            }
        } catch (SQLException ex) {
            Logger.getLogger(FSampel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FSampel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FSampel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FSampel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FSampel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FSampel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CB_grade;
    private javax.swing.JButton btn_hapus;
    private javax.swing.JButton btn_simpan;
    private javax.swing.JButton btn_tambah;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private UI.PanelGambar panelGambar4;
    private UI.PanelGambar panelGambar5;
    private javax.swing.JPanel statusbar;
    private javax.swing.JTextField txt_kode;
    private javax.swing.JTextField txt_namafile;
    private javax.swing.JTextField txt_tanggal;
    // End of variables declaration//GEN-END:variables
}
